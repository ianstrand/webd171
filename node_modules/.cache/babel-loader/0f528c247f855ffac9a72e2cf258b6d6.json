{"ast":null,"code":"export function buildVideoCategoriesRequest() {\n  return buildApiRequest('GET', '/youtube/v3/videoCategories', {\n    'part': 'snippet',\n    'regionCode': 'US'\n  }, null);\n}\nexport function buildMostPopularVideosRequest() {\n  var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 12;\n  var loadDescription = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var nextPageToken = arguments.length > 2 ? arguments[2] : undefined;\n  var videoCategoryId = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  var fields = 'nextPageToken,prevPageToken,items(contentDetails/duration,id,snippet(channelId,channelTitle,publishedAt,thumbnails/medium,title),statistics/viewCount),pageInfo(totalResults)';\n\n  if (loadDescription) {\n    fields += ',items/snippet/description';\n  }\n\n  return buildApiRequest('GET', '/youtube/v3/videos', {\n    part: 'snippet,statistics,contentDetails',\n    chart: 'mostPopular',\n    maxResults: amount,\n    regionCode: 'US',\n    pageToken: nextPageToken,\n    fields,\n    videoCategoryId\n  }, null);\n}\nexport function buildVideoDetailRequest(videoId) {\n  return buildApiRequest('GET', '/youtube/v3/videos', {\n    part: 'snippet,statistics,contentDetails',\n    id: videoId,\n    fields: 'kind,items(contentDetails/duration,id,snippet(channelId,channelTitle,description,publishedAt,thumbnails/medium,title),statistics)'\n  }, null);\n}\nexport function buildChannelRequest(channelId) {\n  return buildApiRequest('GET', '/youtube/v3/channels', {\n    part: 'snippet,statistics',\n    id: channelId,\n    fields: 'kind,items(id,snippet(description,thumbnails/medium,title),statistics/subscriberCount)'\n  }, null);\n}\nexport function buildCommentThreadRequest(videoId, nextPageToken) {\n  return buildApiRequest('GET', '/youtube/v3/commentThreads', {\n    part: 'id,snippet',\n    pageToken: nextPageToken,\n    videoId\n  }, null);\n}\nexport function buildSearchRequest(query, nextPageToken) {\n  var amount = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 12;\n  return buildApiRequest('GET', '/youtube/v3/search', {\n    part: 'id,snippet',\n    q: query,\n    type: 'video',\n    pageToken: nextPageToken,\n    maxResults: amount\n  }, null);\n}\nexport function buildRelatedVideosRequest(videoId) {\n  var amountRelatedVideos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 12;\n  return buildApiRequest('GET', '/youtube/v3/search', {\n    part: 'snippet',\n    type: 'video',\n    maxResults: amountRelatedVideos,\n    relatedToVideoId: videoId\n  }, null);\n}\n/*\n  Util - Youtube API boilerplate code\n */\n\nfunction authenticate() {\n  return gapi.auth2.getAuthInstance().signIn({\n    scope: \"https://www.googleapis.com/auth/youtube.readonly\"\n  }).then(function () {\n    console.log(\"Sign-in successful\");\n  }, function (err) {\n    console.error(\"Error signing in\", err);\n  });\n}\n\nfunction loadClient() {\n  gapi.client.setApiKey(\"YOUR_API_KEY\");\n  return gapi.client.load(\"https://www.googleapis.com/discovery/v1/apis/youtube/v3/rest\").then(function () {\n    console.log(\"GAPI client loaded for API\");\n  }, function (err) {\n    console.error(\"Error loading GAPI client for API\", err);\n  });\n} // Make sure the client is loaded and sign-in is complete before calling this method.\n\n\nfunction execute() {\n  return gapi.client.youtube.videos.list({}).then(function (response) {\n    // Handle the results here (response.result has the parsed body).\n    console.log(\"Response\", response);\n  }, function (err) {\n    console.error(\"Execute error\", err);\n  });\n}\n\ngapi.load(\"client:auth2\", function () {\n  gapi.auth2.init({\n    client_id: \"YOUR_CLIENT_ID\"\n  });\n});","map":{"version":3,"sources":["/Users/ianstrand/Sites/webd171/lessons/week7/react-youtube/src/store/api/youtube-api.js"],"names":["buildVideoCategoriesRequest","buildApiRequest","buildMostPopularVideosRequest","amount","loadDescription","nextPageToken","videoCategoryId","fields","part","chart","maxResults","regionCode","pageToken","buildVideoDetailRequest","videoId","id","buildChannelRequest","channelId","buildCommentThreadRequest","buildSearchRequest","query","q","type","buildRelatedVideosRequest","amountRelatedVideos","relatedToVideoId","authenticate","gapi","auth2","getAuthInstance","signIn","scope","then","console","log","err","error","loadClient","client","setApiKey","load","execute","youtube","videos","list","response","init","client_id"],"mappings":"AAAA,OAAO,SAASA,2BAAT,GAAuC;AAC5C,SAAOC,eAAe,CAAC,KAAD,EACpB,6BADoB,EAEpB;AACE,YAAQ,SADV;AAEE,kBAAc;AAFhB,GAFoB,EAKjB,IALiB,CAAtB;AAMD;AAED,OAAO,SAASC,6BAAT,GAAoH;AAAA,MAA7EC,MAA6E,uEAApE,EAAoE;AAAA,MAAhEC,eAAgE,uEAA9C,KAA8C;AAAA,MAAvCC,aAAuC;AAAA,MAAxBC,eAAwB,uEAAN,IAAM;AACzH,MAAIC,MAAM,GAAG,+KAAb;;AACA,MAAIH,eAAJ,EAAqB;AACnBG,IAAAA,MAAM,IAAI,4BAAV;AACD;;AACD,SAAON,eAAe,CAAC,KAAD,EACpB,oBADoB,EAEpB;AACEO,IAAAA,IAAI,EAAE,mCADR;AAEEC,IAAAA,KAAK,EAAE,aAFT;AAGEC,IAAAA,UAAU,EAAEP,MAHd;AAIEQ,IAAAA,UAAU,EAAE,IAJd;AAKEC,IAAAA,SAAS,EAAEP,aALb;AAMEE,IAAAA,MANF;AAOED,IAAAA;AAPF,GAFoB,EAUjB,IAViB,CAAtB;AAWD;AAED,OAAO,SAASO,uBAAT,CAAiCC,OAAjC,EAA0C;AAC/C,SAAOb,eAAe,CAAC,KAAD,EACpB,oBADoB,EAEpB;AACEO,IAAAA,IAAI,EAAE,mCADR;AAEEO,IAAAA,EAAE,EAAED,OAFN;AAGEP,IAAAA,MAAM,EAAE;AAHV,GAFoB,EAMjB,IANiB,CAAtB;AAOD;AAED,OAAO,SAASS,mBAAT,CAA6BC,SAA7B,EAAwC;AAC7C,SAAOhB,eAAe,CAAC,KAAD,EACpB,sBADoB,EAEpB;AACEO,IAAAA,IAAI,EAAE,oBADR;AAEEO,IAAAA,EAAE,EAAEE,SAFN;AAGEV,IAAAA,MAAM,EAAE;AAHV,GAFoB,EAMjB,IANiB,CAAtB;AAOD;AAED,OAAO,SAASW,yBAAT,CAAmCJ,OAAnC,EAA4CT,aAA5C,EAA2D;AAChE,SAAOJ,eAAe,CAAC,KAAD,EACpB,4BADoB,EAEpB;AACEO,IAAAA,IAAI,EAAE,YADR;AAEEI,IAAAA,SAAS,EAAEP,aAFb;AAGES,IAAAA;AAHF,GAFoB,EAMjB,IANiB,CAAtB;AAOD;AAED,OAAO,SAASK,kBAAT,CAA4BC,KAA5B,EAAmCf,aAAnC,EAA+D;AAAA,MAAbF,MAAa,uEAAJ,EAAI;AACpE,SAAOF,eAAe,CAAC,KAAD,EACpB,oBADoB,EAEpB;AACEO,IAAAA,IAAI,EAAE,YADR;AAEEa,IAAAA,CAAC,EAAED,KAFL;AAGEE,IAAAA,IAAI,EAAE,OAHR;AAIEV,IAAAA,SAAS,EAAEP,aAJb;AAKEK,IAAAA,UAAU,EAAEP;AALd,GAFoB,EAQjB,IARiB,CAAtB;AASD;AAED,OAAO,SAASoB,yBAAT,CAAmCT,OAAnC,EAAsE;AAAA,MAA1BU,mBAA0B,uEAAJ,EAAI;AAC3E,SAAOvB,eAAe,CAAC,KAAD,EACpB,oBADoB,EAEpB;AACEO,IAAAA,IAAI,EAAE,SADR;AAEEc,IAAAA,IAAI,EAAE,OAFR;AAGEZ,IAAAA,UAAU,EAAEc,mBAHd;AAIEC,IAAAA,gBAAgB,EAAEX;AAJpB,GAFoB,EAOjB,IAPiB,CAAtB;AAQD;AAED;;;;AAGC,SAASY,YAAT,GAAwB;AACrB,SAAOC,IAAI,CAACC,KAAL,CAAWC,eAAX,GACFC,MADE,CACK;AAACC,IAAAA,KAAK,EAAE;AAAR,GADL,EAEFC,IAFE,CAEG,YAAW;AAAEC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AAAoC,GAFpD,EAGG,UAASC,GAAT,EAAc;AAAEF,IAAAA,OAAO,CAACG,KAAR,CAAc,kBAAd,EAAkCD,GAAlC;AAAyC,GAH5D,CAAP;AAID;;AACD,SAASE,UAAT,GAAsB;AACpBV,EAAAA,IAAI,CAACW,MAAL,CAAYC,SAAZ,CAAsB,cAAtB;AACA,SAAOZ,IAAI,CAACW,MAAL,CAAYE,IAAZ,CAAiB,8DAAjB,EACFR,IADE,CACG,YAAW;AAAEC,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AAA4C,GAD5D,EAEG,UAASC,GAAT,EAAc;AAAEF,IAAAA,OAAO,CAACG,KAAR,CAAc,mCAAd,EAAmDD,GAAnD;AAA0D,GAF7E,CAAP;AAGD,C,CACD;;;AACA,SAASM,OAAT,GAAmB;AACjB,SAAOd,IAAI,CAACW,MAAL,CAAYI,OAAZ,CAAoBC,MAApB,CAA2BC,IAA3B,CAAgC,EAAhC,EACFZ,IADE,CACG,UAASa,QAAT,EAAmB;AACjB;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBW,QAAxB;AACD,GAJJ,EAKG,UAASV,GAAT,EAAc;AAAEF,IAAAA,OAAO,CAACG,KAAR,CAAc,eAAd,EAA+BD,GAA/B;AAAsC,GALzD,CAAP;AAMD;;AACDR,IAAI,CAACa,IAAL,CAAU,cAAV,EAA0B,YAAW;AACnCb,EAAAA,IAAI,CAACC,KAAL,CAAWkB,IAAX,CAAgB;AAACC,IAAAA,SAAS,EAAE;AAAZ,GAAhB;AACD,CAFD","sourcesContent":["export function buildVideoCategoriesRequest() {\n  return buildApiRequest('GET',\n    '/youtube/v3/videoCategories',\n    {\n      'part': 'snippet',\n      'regionCode': 'US'\n    }, null);\n}\n\nexport function buildMostPopularVideosRequest(amount = 12, loadDescription = false, nextPageToken, videoCategoryId = null) {\n  let fields = 'nextPageToken,prevPageToken,items(contentDetails/duration,id,snippet(channelId,channelTitle,publishedAt,thumbnails/medium,title),statistics/viewCount),pageInfo(totalResults)';\n  if (loadDescription) {\n    fields += ',items/snippet/description';\n  }\n  return buildApiRequest('GET',\n    '/youtube/v3/videos',\n    {\n      part: 'snippet,statistics,contentDetails',\n      chart: 'mostPopular',\n      maxResults: amount,\n      regionCode: 'US',\n      pageToken: nextPageToken,\n      fields,\n      videoCategoryId,\n    }, null);\n}\n\nexport function buildVideoDetailRequest(videoId) {\n  return buildApiRequest('GET',\n    '/youtube/v3/videos',\n    {\n      part: 'snippet,statistics,contentDetails',\n      id: videoId,\n      fields: 'kind,items(contentDetails/duration,id,snippet(channelId,channelTitle,description,publishedAt,thumbnails/medium,title),statistics)'\n    }, null);\n}\n\nexport function buildChannelRequest(channelId) {\n  return buildApiRequest('GET',\n    '/youtube/v3/channels',\n    {\n      part: 'snippet,statistics',\n      id: channelId,\n      fields: 'kind,items(id,snippet(description,thumbnails/medium,title),statistics/subscriberCount)'\n    }, null);\n}\n\nexport function buildCommentThreadRequest(videoId, nextPageToken) {\n  return buildApiRequest('GET',\n    '/youtube/v3/commentThreads',\n    {\n      part: 'id,snippet',\n      pageToken: nextPageToken,\n      videoId,\n    }, null);\n}\n\nexport function buildSearchRequest(query, nextPageToken, amount = 12) {\n  return buildApiRequest('GET',\n    '/youtube/v3/search',\n    {\n      part: 'id,snippet',\n      q: query,\n      type: 'video',\n      pageToken: nextPageToken,\n      maxResults: amount,\n    }, null);\n}\n\nexport function buildRelatedVideosRequest(videoId, amountRelatedVideos = 12) {\n  return buildApiRequest('GET',\n    '/youtube/v3/search',\n    {\n      part: 'snippet',\n      type: 'video',\n      maxResults: amountRelatedVideos,\n      relatedToVideoId: videoId,\n    }, null);\n}\n\n/*\n  Util - Youtube API boilerplate code\n */\n function authenticate() {\n    return gapi.auth2.getAuthInstance()\n        .signIn({scope: \"https://www.googleapis.com/auth/youtube.readonly\"})\n        .then(function() { console.log(\"Sign-in successful\"); },\n              function(err) { console.error(\"Error signing in\", err); });\n  }\n  function loadClient() {\n    gapi.client.setApiKey(\"YOUR_API_KEY\");\n    return gapi.client.load(\"https://www.googleapis.com/discovery/v1/apis/youtube/v3/rest\")\n        .then(function() { console.log(\"GAPI client loaded for API\"); },\n              function(err) { console.error(\"Error loading GAPI client for API\", err); });\n  }\n  // Make sure the client is loaded and sign-in is complete before calling this method.\n  function execute() {\n    return gapi.client.youtube.videos.list({})\n        .then(function(response) {\n                // Handle the results here (response.result has the parsed body).\n                console.log(\"Response\", response);\n              },\n              function(err) { console.error(\"Execute error\", err); });\n  }\n  gapi.load(\"client:auth2\", function() {\n    gapi.auth2.init({client_id: \"YOUR_CLIENT_ID\"});\n  });"]},"metadata":{},"sourceType":"module"}